generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model contacts {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  fullname      String    @db.VarChar(255)
  email         String    @unique(map: "contacts_email_unique") @db.VarChar(255)
  phone_number  String?   @db.VarChar(255)
  message       String?   @db.Text
  interested_in String    @db.VarChar(255)
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)

  @@index([fullname], map: "contacts_fullname_index")
}

model galleries {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  img         String    @db.VarChar(255)
  description String    @db.VarChar(255)
  user_id     BigInt    @db.UnsignedBigInt
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)

  @@index([img], map: "galleries_img_index")
  @@index([user_id], map: "galleries_user_id_index")
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model password_resets {
  email      String    @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)

  @@index([email], map: "password_resets_email_index")
  @@ignore
}

model personal_access_tokens {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  tokenable_type String    @db.VarChar(255)
  tokenable_id   BigInt    @db.UnsignedBigInt
  name           String    @db.VarChar(255)
  token          String    @unique(map: "personal_access_tokens_token_unique") @db.VarChar(64)
  abilities      String?   @db.Text
  last_used_at   DateTime? @db.Timestamp(0)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([tokenable_type, tokenable_id], map: "personal_access_tokens_tokenable_type_tokenable_id_index")
}

model units {
  id                   BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  unit_type            String    @db.VarChar(255)
  unit_lt              String    @db.VarChar(255)
  unit_lb              String    @db.VarChar(255)
  unit_img             String    @db.VarChar(255)
  unit_floor_plan_img  String    @db.VarChar(255)
  unit_detail_bedroom  String    @db.VarChar(255)
  unit_detail_bathroom String    @db.VarChar(255)
  unit_detail_carport  String    @db.VarChar(255)
  user_id              BigInt    @db.UnsignedBigInt
  created_at           DateTime? @db.Timestamp(0)
  updated_at           DateTime? @db.Timestamp(0)

  @@index([unit_detail_bathroom], map: "units_unit_detail_bathroom_index")
  @@index([unit_detail_bedroom], map: "units_unit_detail_bedroom_index")
  @@index([unit_detail_carport], map: "units_unit_detail_carport_index")
  @@index([unit_lb], map: "units_unit_lb_index")
  @@index([unit_lt], map: "units_unit_lt_index")
  @@index([unit_type], map: "units_unit_type_index")
  @@index([user_id], map: "units_user_id_index")
}

model users {
  id              BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  fullname        String       @db.VarChar(255)
  email           String       @unique(map: "users_email_unique") @db.VarChar(255)
  phone_number    String?      @db.VarChar(255)
  roles           users_roles
  status          users_status
  user_id         BigInt?      @db.UnsignedBigInt
  password        String       @db.VarChar(255)
  detail_password String?      @db.VarChar(255)
  created_at      DateTime?    @db.Timestamp(0)
  updated_at      DateTime?    @db.Timestamp(0)

  @@index([fullname], map: "users_fullname_index")
  @@index([roles], map: "users_roles_index")
  @@index([status], map: "users_status_index")
  @@index([user_id], map: "users_user_id_index")
}

enum users_roles {
  admin
  user
}

enum users_status {
  active
  inactive
}
